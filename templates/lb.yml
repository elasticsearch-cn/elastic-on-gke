apiVersion: v1
kind: Service
metadata:
    name: dingo-ingest-svc
    annotations:
        cloud.google.com/app-protocols: '{"https":"HTTPS"}'
        #service.alpha.kubernetes.io/app-protocols: '{"https":"HTTPS"}'
        cloud.google.com/neg: '{"ingress": true}'
spec:
    type: NodePort
    ports:
    - name: https
      port: 9200
      protocol: TCP
      targetPort: 9200
    #- name: tcp
      #port: 9300
      #protocol: TCP
      #targetPort: 9300
    selector:
        common.k8s.elastic.co/type: elasticsearch
        elasticsearch.k8s.elastic.co/cluster-name: dingo
        ingest: "on"
---
apiVersion: v1
kind: Service
metadata:
    name: dingo-coord-svc
    annotations:
        cloud.google.com/app-protocols: '{"https":"HTTPS"}'
        #service.alpha.kubernetes.io/app-protocols: '{"https":"HTTPS"}'
        cloud.google.com/neg: '{"ingress": true}'
spec:
    type: NodePort
    ports:
    - name: https
      port: 9200
      protocol: TCP
      targetPort: 9200
    #- name: tcp
      #port: 9300
      #protocol: TCP
      #targetPort: 9300
    selector:
        common.k8s.elastic.co/type: elasticsearch
        elasticsearch.k8s.elastic.co/cluster-name: dingo
        coord: "on"
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: dingo-kbn-svc-bc
spec:
  healthCheck:
    checkIntervalSec: 15
    port: 5601
    type: HTTPS
    requestPath: /login
---
apiVersion: v1
kind: Service
metadata:
    name: dingo-kbn-svc
    annotations:
        cloud.google.com/app-protocols: '{"https":"HTTPS"}'
        #service.alpha.kubernetes.io/app-protocols: '{"https":"HTTPS"}'
        cloud.google.com/neg: '{"ingress": true}'
        cloud.google.com/backend-config: '{"ports": {"443":"dingo-kbn-svc-bc"}}'
spec:
    type: NodePort
    ports:
    - name: https
      port: 5601
      protocol: TCP
      targetPort: 5601
    selector:
        common.k8s.elastic.co/type: kibana
        k8na: "on"
---
# https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
    name: dingo-elk-ingress
    annotations:
        kubernetes.io/ingress.global-static-ip-name: "elk-static-ip"
        kubernetes.io/ingress.class: gce
        kubernetes.io/ingress.allow-http: "false"
        networking.gke.io/managed-certificates: dingo-es-cert-gcp-managed
spec:
    # https://github.com/kubernetes/ingress-gce/blob/master/pkg/loadbalancers/l7.go#L149
    # https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs
    # https://kubernetes.io/docs/concepts/services-networking/ingress/
    # tls:
    # - hosts: 
    #   - k8es.ingest.bindiego.com
    #   - k8es.client.bindiego.com
    #   - k8na.bindiego.com
    #  secretName: dingo-es-tls
    rules:
    - host: k8es.ingest.bindiego.com
      http:
          paths:
              - backend:
                  serviceName: dingo-ingest-svc
                  servicePort: 9200
    - host: k8es.client.bindiego.com
      http:
          paths:
              - backend:
                  serviceName: dingo-coord-svc
                  servicePort: 9200
    - host: k8na.bindiego.com
      http:
          paths:
              - backend:
                  serviceName: dingo-kbn-svc
                  servicePort: 5601
