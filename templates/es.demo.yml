apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
    name: dingo-demo
spec:
    version: 8.18.3
    http:
        service:
            metadata:
                annotations:
                    cloud.google.com/app-protocols: '{"https":"HTTPS"}'
                    cloud.google.com/neg: '{"ingress": true}'
                    cloud.google.com/backend-config: '{"ports": {"9200":"dingo-demo-es-backendconfig"}}'
            spec:
                #type: LoadBalancer
                #type: NodePort
                type: ClusterIP
                ports:
                    - name: https
                      port: 9200
                      protocol: TCP
                      targetPort: 9200
    secureSettings:
        - secretName: gcs-credentials
    nodeSets:
        - name: zone-a
          count: 3
          config:
              node.roles:
                  [master, data, ingest, ml, remote_cluster_client, transform]
              xpack.ml.enabled: true
              node.store.allow_mmap: true
              index.store.type: hybridfs
              cluster.routing.allocation.awareness.attributes: zone
              node.attr.zone: us-central1-a
              #node.remote_cluster_client: true
              xpack.security.authc.anonymous.roles: monitoring_user
              xpack.security.authc.anonymous.authz_exception: false
          volumeClaimTemplates:
              - metadata:
                    name: elasticsearch-data
                spec:
                    accessModes:
                        - ReadWriteOnce
                    resources:
                        requests:
                            storage: 256Gi
                    storageClassName: dingo-pdssd-balanced
          podTemplate:
              metadata:
                  labels:
                      ingest: "on"
                      coord: "on"
              spec:
                  containers:
                      - name: elasticsearch
                        resources:
                            requests:
                                memory: 4Gi
                                cpu: 1100m
                            limits:
                                memory: 4Gi
                                cpu: 1100m
                        env:
                            - name: ES_JAVA_OPTS
                              value: "-Xms2g -Xmx2g"
                            - name: PRE_STOP_MAX_WAIT_SECONDS
                              value: "20"
                            - name: PRE_STOP_ADDITIONAL_WAIT_SECONDS
                              value: "30"
                            - name: READINESS_PROBE_TIMEOUT
                              value: "10"
                        readinessProbe:
                            exec:
                                command:
                                    - bash
                                    - -c
                                    - /mnt/elastic-internal/scripts/readiness-probe-script.sh
                            failureThreshold: 3
                            initialDelaySeconds: 10
                            periodSeconds: 12
                            successThreshold: 1
                            timeoutSeconds: 12
                  initContainers:
                      #- name: sysctl
                      #securityContext:
                      #priviledged: true
                      #command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
                      - name: install-plugins
                        command:
                            - sh
                            - -c
                            - |
                                bin/elasticsearch-plugin install --batch repository-gcs
                  #- name: install-ik
                  #  command:
                  #  - sh
                  #  - -c
                  #  - |
                  #    bin/elasticsearch-plugin install --batch https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v8.3.1/elasticsearch-analysis-ik-8.3.1.zip
                  nodeSelector:
                      cloud.google.com/gke-nodepool: default-pool
                  affinity:
                      podAntiAffinity:
                          preferredDuringSchedulingIgnoredDuringExecution:
                              - weight: 100
                                podAffinityTerm:
                                    labelSelector:
                                        matchLabels:
                                            elasticsearch.k8s.elastic.co/cluster-name: dingo-demo
                                    topologyKey: kubernetes.io/hostname

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: dingo-demo-es-ingress
    annotations:
        kubernetes.io/ingress.allow-http: "true"
        kubernetes.io/ingress.class: "gce-internal"
spec:
    rules:
        - http:
              paths:
                  - path: /
                    pathType: Prefix
                    backend:
                        service:
                            name: dingo-demo-es-http
                            port:
                                number: 9200

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
    name: dingo-demo-es-backendconfig
spec:
    healthCheck:
        type: HTTPS
        port: 9200
        requestPath: /
        checkIntervalSec: 15
        timeoutSec: 10
        healthyThreshold: 1
        unhealthyThreshold: 10
    sessionAffinity:
        affinityType: "CLIENT_IP"
    timeoutSec: 60
    connectionDraining:
        drainingTimeoutSec: 300
